// Generated by Haxe 3.4.7
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var React_Component = require("react").Component;
var react_native_api_StyleSheet = require("react-native").StyleSheet;
var App = function(props) {
	React_Component.call(this,props);
	this.state = { };
	var tmp = react_native_api_Dimensions.get("window").width * 2 * react_native_api_PixelRatio.get() / 3;
	reactnative_navigation_Navigation.startSingleScreenApp({ screen : { screen : "Home", title : "Welcome home", navigatorStyle : { navBarTextFontSize : 16}, navigatorButtons : { leftButtons : [{ title : "Edit", id : "edit", testID : "e2e_rules", disabled : false, disableIconTint : true, buttonColor : "blue", buttonFontSize : 14, buttonFontWeight : "600"}]}}, drawer : { left : { screen : "First", passProps : { }, fixedWidth : tmp}}, appStyle : { orientation : "portrait"}});
};
App.__name__ = true;
App.__super__ = React_Component;
App.prototype = $extend(React_Component.prototype,{
	closeModale: function() {
		reactnative_navigation_Navigation.dismissModal({ animationType : "slide-down"});
	}
	,onNavigatorEvent: function(e) {
		console.log("App onNavigatorEvent : " + Std.string(e));
		var _g = e.id;
		switch(_g) {
		case "close-btn":
			this.closeModale();
			break;
		case "edit":
			this.closeModale();
			break;
		}
	}
	,componentWillMount: function() {
		this.props.navigator.setOnNavigatorEvent($bind(this,this.onNavigatorEvent));
	}
	,render: function() {
		return React.createElement(react_native_component_View,{ style : App.styles.container});
	}
});
var HomeScene = function(props) {
	React_Component.call(this,props);
	this.state = { };
	this.items = [{ label : "one", value : "First"},{ label : "two", value : "Second"},{ label : "three", value : "Third"}];
};
HomeScene.__name__ = true;
HomeScene.__super__ = React_Component;
HomeScene.prototype = $extend(React_Component.prototype,{
	onPressed: function(item,index) {
		console.log("Navigating to " + item.value);
		this.props.navigator.push({ screen : item.value, title : item.label, subtitle : "sous menu", animated : true, animationType : "slide-horizontal", backButtonTitle : "back to me", backButtonHidden : false});
	}
	,renderList: function() {
		var styles = HomeScene.styles;
		var _g = [];
		var _g2 = 0;
		var _g1 = this.items.length;
		while(_g2 < _g1) {
			var i = _g2++;
			_g.push(React.createElement(react_native_component_Button,{ key : i, style : styles.button, onPress : (function(a2,a1,f) {
				return function() {
					f[0](a1[0],a2[0]);
				};
			})([i],[this.items[i]],[$bind(this,this.onPressed)]), title : this.items[i].label}));
		}
		return _g;
	}
	,viewProps: function() {
		return { navigator : this.props.navigator};
	}
	,componentDidMount: function() {
		reactnative_navigation_Navigation.showModal({ screen : "Third", title : "Edit page", passProps : { }, animationType : "slide-up"});
	}
	,render: function() {
		var tmp = this.viewProps();
		return React.createElement(react_native_component_View,Object.assign({ },tmp,{ style : HomeScene.styles.container}),React.createElement(react_native_component_Image,{ source : require("./assets/icon_message.png")}),React.createElement(react_native_component_Text,{ style : HomeScene.styles.text},"The navigation menu"),this.renderList());
	}
});
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	Main.registerScreens();
	new App({ });
};
Main.registerScreens = function() {
	reactnative_navigation_Navigation.registerComponent("Home",function() {
		return HomeScene;
	});
	reactnative_navigation_Navigation.registerComponent("First",function() {
		return scene_Scene1;
	});
	reactnative_navigation_Navigation.registerComponent("Second",function() {
		return scene_Scene2;
	});
	reactnative_navigation_Navigation.registerComponent("Third",function() {
		return scene_Scene3;
	});
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var enums_Enums = function() { };
enums_Enums.__name__ = true;
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var React = require("react");
var react_ReactMacro = function() { };
react_ReactMacro.__name__ = true;
var react_component_props__$Props_Children_$Impl_$ = {};
react_component_props__$Props_Children_$Impl_$.__name__ = true;
react_component_props__$Props_Children_$Impl_$.get_length = function(this1) {
	if((this1 instanceof Array) && this1.__enum__ == null) {
		return this1.length;
	} else {
		return 1;
	}
};
react_component_props__$Props_Children_$Impl_$.get = function(this1,index) {
	if((this1 instanceof Array) && this1.__enum__ == null) {
		return this1[index];
	} else {
		return this1;
	}
};
var react_native_api_Dimensions = require("react-native").Dimensions;
var react_native_api_PixelRatio = require("react-native").PixelRatio;
var react_native_component_Button = require("react-native").Button;
var react_native_component_FlatList = require("react-native").FlatList;
var react_native_component_Image = require("react-native").Image;
var react_native_component_Text = require("react-native").Text;
var react_native_component_View = require("react-native").View;
var reactnative_navigation_Navigation = require("react-native-navigation").Navigation;
var scene_Scene1 = function(props) {
	React_Component.call(this,props);
};
scene_Scene1.__name__ = true;
scene_Scene1.__super__ = React_Component;
scene_Scene1.prototype = $extend(React_Component.prototype,{
	render: function() {
		var _gthis = this;
		var renderItem = function(item,index) {
			return React.createElement(react_native_component_Text,{ },"Toto");
		};
		var keyExtractor = function(o,index1) {
			return o.id + "";
		};
		var id = 0;
		var _g = [];
		var _g1 = 0;
		while(_g1 < 100) {
			var i = _g1++;
			_g.push("Toto_" + i);
		}
		var data = _g.map(function(o1) {
			id += 1;
			return { id : id - 1, key : o1};
		});
		var goBack = function() {
			_gthis.props.navigator.pop({ animated : true, animationType : "fade"});
		};
		return React.createElement(react_native_component_View,{ style : scene_Scene1.styles.container},React.createElement(react_native_component_Text,{ style : scene_Scene1.styles.text},"This is Scene1"),React.createElement(react_native_component_Button,{ style : scene_Scene1.styles.text, onPress : goBack, title : "Back"}),React.createElement(react_native_component_FlatList,{ keyExtractor : keyExtractor, data : data, renderItem : renderItem}));
	}
});
var scene_Scene2 = function(props) {
	React_Component.call(this,props);
};
scene_Scene2.__name__ = true;
scene_Scene2.__super__ = React_Component;
scene_Scene2.prototype = $extend(React_Component.prototype,{
	goBack: function() {
		this.props.navigator.pop({ animated : true, animationType : "fade"});
	}
	,goFirstScreen: function() {
		this.props.navigator.push({ screen : "First", title : "Pushed Screen"});
	}
	,render: function() {
		return React.createElement(react_native_component_View,{ style : scene_Scene2.styles.container},React.createElement(react_native_component_Text,{ style : scene_Scene2.styles.text},"This is Scene2"),React.createElement(react_native_component_Button,{ style : scene_Scene2.styles.text, onPress : $bind(this,this.goBack), title : "Back"}),React.createElement(react_native_component_Button,{ style : scene_Scene2.styles.text, onPress : $bind(this,this.goFirstScreen), title : "Goto First screen"}));
	}
});
var scene_Scene3 = function(props) {
	React_Component.call(this,props);
};
scene_Scene3.__name__ = true;
scene_Scene3.__super__ = React_Component;
scene_Scene3.prototype = $extend(React_Component.prototype,{
	componentDidMount: function() {
		this.props.navigator.setOnNavigatorEvent($bind(this,this.onNavigatorEvent));
	}
	,closeModale: function() {
		reactnative_navigation_Navigation.dismissModal({ animationType : "slide-down"});
	}
	,onNavigatorEvent: function(e) {
		console.log("Scene3 onNavigatorEvent : " + e.id);
		var _g = e.id;
		if(_g == "close-btn") {
			this.closeModale();
		}
	}
	,goBack: function() {
		this.props.navigator.pop({ animated : true, animationType : "fade"});
	}
	,render: function() {
		return React.createElement(react_native_component_View,{ style : scene_Scene3.styles.container},React.createElement(react_native_component_Text,{ style : scene_Scene3.styles.text},"This is Scene3"),React.createElement(react_native_component_Button,{ style : scene_Scene3.styles.text, onPress : $bind(this,this.goBack), title : "Back"}));
	}
});
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
var $$tre = (typeof Symbol === "function" && Symbol.for && Symbol.for("react.element")) || 0xeac7;
String.__name__ = true;
Array.__name__ = true;
App.styles = react_native_api_StyleSheet.create({ container : { flex : 1, justifyContent : "center", alignItems : "stretch", backgroundColor : "#00FF00"}});
App.displayName = "App";
HomeScene.styles = react_native_api_StyleSheet.create({ container : { flex : 1, justifyContent : "center", alignItems : "center", backgroundColor : "#00FFCC"}, text : { fontSize : 20, textAlign : "center", margin : 10}, item : { margin : 30, color : "red"}, itemText : { margin : 30, color : "green"}, button : { color : "blue"}});
HomeScene.displayName = "HomeScene";
Main.styles = react_native_api_StyleSheet.create({ container : { flex : 1, justifyContent : "center", alignItems : "center", backgroundColor : "#00FFCC"}, text : { fontSize : 20, textAlign : "center", margin : 10}, item : { margin : 30, color : "red"}, itemText : { margin : 30, color : "green"}});
scene_Scene1.styles = Main.styles;
scene_Scene1.displayName = "Scene1";
scene_Scene2.styles = Main.styles;
scene_Scene2.displayName = "Scene2";
scene_Scene3.styles = Main.styles;
scene_Scene3.navigatorButtons = { leftButtons : [{ id : "null"}], rightButtons : [{ id : "close-btn", icon : require("./assets/icon_message.png"), buttonColor : "rgb(22,41,76)"}]};
scene_Scene3.displayName = "Scene3";
Main.main();
})();
